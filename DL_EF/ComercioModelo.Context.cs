//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL_EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ComercioEntities : DbContext
    {
        public ComercioEntities()
            : base("name=ComercioEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Categoria> Categorias { get; set; }
        public virtual DbSet<Cliente> Clientes { get; set; }
        public virtual DbSet<DetalleVenta> DetalleVentas { get; set; }
        public virtual DbSet<Producto> Productoes { get; set; }
        public virtual DbSet<Proveedor> Proveedors { get; set; }
        public virtual DbSet<Subcategoria> Subcategorias { get; set; }
        public virtual DbSet<Venta> Ventas { get; set; }
    
        public virtual int CategoriaAdd(string nombre, ObjectParameter idCategoria)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CategoriaAdd", nombreParameter, idCategoria);
        }
    
        public virtual int CategoriaDelete(Nullable<int> idCategoria)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CategoriaDelete", idCategoriaParameter);
        }
    
        public virtual ObjectResult<CategoriaGetAll_Result> CategoriaGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CategoriaGetAll_Result>("CategoriaGetAll");
        }
    
        public virtual ObjectResult<CategoriaGetById_Result> CategoriaGetById(Nullable<int> idCategoria)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CategoriaGetById_Result>("CategoriaGetById", idCategoriaParameter);
        }
    
        public virtual int CategoriaUpdate(Nullable<int> idCategoria, string nombre)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CategoriaUpdate", idCategoriaParameter, nombreParameter);
        }
    
        public virtual int ClienteAdd(string nombre, string apellidoPaterno, string apellidoMaterno, ObjectParameter idCliente)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClienteAdd", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, idCliente);
        }
    
        public virtual int ClienteDelete(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClienteDelete", idClienteParameter);
        }
    
        public virtual ObjectResult<ClienteGetAll_Result> ClienteGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClienteGetAll_Result>("ClienteGetAll");
        }
    
        public virtual ObjectResult<ClienteGetById_Result> ClienteGetById(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClienteGetById_Result>("ClienteGetById", idClienteParameter);
        }
    
        public virtual int ClienteUpdate(Nullable<int> idCliente, string nombre, string apellidoPaterno, string apellidoMaterno)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClienteUpdate", idClienteParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter);
        }
    
        public virtual int DetalleVentaAdd(Nullable<int> idProducto, Nullable<int> idVenta, Nullable<int> piezas, ObjectParameter idDetalleVenta)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var idVentaParameter = idVenta.HasValue ?
                new ObjectParameter("IdVenta", idVenta) :
                new ObjectParameter("IdVenta", typeof(int));
    
            var piezasParameter = piezas.HasValue ?
                new ObjectParameter("Piezas", piezas) :
                new ObjectParameter("Piezas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DetalleVentaAdd", idProductoParameter, idVentaParameter, piezasParameter, idDetalleVenta);
        }
    
        public virtual int DetalleVentaDelete(Nullable<int> idDetalleVenta)
        {
            var idDetalleVentaParameter = idDetalleVenta.HasValue ?
                new ObjectParameter("IdDetalleVenta", idDetalleVenta) :
                new ObjectParameter("IdDetalleVenta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DetalleVentaDelete", idDetalleVentaParameter);
        }
    
        public virtual ObjectResult<DetalleVentaGetAll_Result> DetalleVentaGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DetalleVentaGetAll_Result>("DetalleVentaGetAll");
        }
    
        public virtual ObjectResult<DetalleVentaGetById_Result> DetalleVentaGetById(Nullable<int> idDetalleVenta)
        {
            var idDetalleVentaParameter = idDetalleVenta.HasValue ?
                new ObjectParameter("IdDetalleVenta", idDetalleVenta) :
                new ObjectParameter("IdDetalleVenta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DetalleVentaGetById_Result>("DetalleVentaGetById", idDetalleVentaParameter);
        }
    
        public virtual int DetalleVentaUpdate(Nullable<int> idDetalleVenta, Nullable<int> idProducto, Nullable<int> idVenta, Nullable<int> piezas)
        {
            var idDetalleVentaParameter = idDetalleVenta.HasValue ?
                new ObjectParameter("IdDetalleVenta", idDetalleVenta) :
                new ObjectParameter("IdDetalleVenta", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var idVentaParameter = idVenta.HasValue ?
                new ObjectParameter("IdVenta", idVenta) :
                new ObjectParameter("IdVenta", typeof(int));
    
            var piezasParameter = piezas.HasValue ?
                new ObjectParameter("Piezas", piezas) :
                new ObjectParameter("Piezas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DetalleVentaUpdate", idDetalleVentaParameter, idProductoParameter, idVentaParameter, piezasParameter);
        }
    
        public virtual int ProductoAdd(Nullable<int> idSubcategoria, Nullable<int> idProveedor, string nombre, string descripcion, Nullable<decimal> precio, Nullable<int> piezas, ObjectParameter idProducto)
        {
            var idSubcategoriaParameter = idSubcategoria.HasValue ?
                new ObjectParameter("IdSubcategoria", idSubcategoria) :
                new ObjectParameter("IdSubcategoria", typeof(int));
    
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("IdProveedor", idProveedor) :
                new ObjectParameter("IdProveedor", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var piezasParameter = piezas.HasValue ?
                new ObjectParameter("Piezas", piezas) :
                new ObjectParameter("Piezas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductoAdd", idSubcategoriaParameter, idProveedorParameter, nombreParameter, descripcionParameter, precioParameter, piezasParameter, idProducto);
        }
    
        public virtual int ProductoDelete(Nullable<int> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductoDelete", idProductoParameter);
        }
    
        public virtual int ProductoUpdate(Nullable<int> idProducto, Nullable<int> idSubcategoria, Nullable<int> idProveedor, string nombre, string descripcion, Nullable<decimal> precio, Nullable<int> piezas)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var idSubcategoriaParameter = idSubcategoria.HasValue ?
                new ObjectParameter("IdSubcategoria", idSubcategoria) :
                new ObjectParameter("IdSubcategoria", typeof(int));
    
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("IdProveedor", idProveedor) :
                new ObjectParameter("IdProveedor", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var piezasParameter = piezas.HasValue ?
                new ObjectParameter("Piezas", piezas) :
                new ObjectParameter("Piezas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductoUpdate", idProductoParameter, idSubcategoriaParameter, idProveedorParameter, nombreParameter, descripcionParameter, precioParameter, piezasParameter);
        }
    
        public virtual int ProveedorAdd(string nombre, ObjectParameter idProveedor)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProveedorAdd", nombreParameter, idProveedor);
        }
    
        public virtual int ProveedorDelete(Nullable<int> idProveedor)
        {
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("IdProveedor", idProveedor) :
                new ObjectParameter("IdProveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProveedorDelete", idProveedorParameter);
        }
    
        public virtual ObjectResult<ProveedorGetAll_Result> ProveedorGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProveedorGetAll_Result>("ProveedorGetAll");
        }
    
        public virtual ObjectResult<ProveedorGetById_Result> ProveedorGetById(Nullable<int> idProveedor)
        {
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("IdProveedor", idProveedor) :
                new ObjectParameter("IdProveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProveedorGetById_Result>("ProveedorGetById", idProveedorParameter);
        }
    
        public virtual int ProveedorUpdate(Nullable<int> idProveedor, string nombre)
        {
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("IdProveedor", idProveedor) :
                new ObjectParameter("IdProveedor", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProveedorUpdate", idProveedorParameter, nombreParameter);
        }
    
        public virtual int SubcategoriaAdd(Nullable<int> idCategoria, string nombre, ObjectParameter idSubcategoria)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SubcategoriaAdd", idCategoriaParameter, nombreParameter, idSubcategoria);
        }
    
        public virtual int SubcategoriaDelete(Nullable<int> idSubcategoria)
        {
            var idSubcategoriaParameter = idSubcategoria.HasValue ?
                new ObjectParameter("IdSubcategoria", idSubcategoria) :
                new ObjectParameter("IdSubcategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SubcategoriaDelete", idSubcategoriaParameter);
        }
    
        public virtual ObjectResult<SubcategoriaGetAll_Result> SubcategoriaGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubcategoriaGetAll_Result>("SubcategoriaGetAll");
        }
    
        public virtual ObjectResult<SubcategoriaGetById_Result> SubcategoriaGetById(Nullable<int> idSubcategoria)
        {
            var idSubcategoriaParameter = idSubcategoria.HasValue ?
                new ObjectParameter("IdSubcategoria", idSubcategoria) :
                new ObjectParameter("IdSubcategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubcategoriaGetById_Result>("SubcategoriaGetById", idSubcategoriaParameter);
        }
    
        public virtual int SubcategoriaUpdate(Nullable<int> idSubcategoria, Nullable<int> idCategoria, string nombre)
        {
            var idSubcategoriaParameter = idSubcategoria.HasValue ?
                new ObjectParameter("IdSubcategoria", idSubcategoria) :
                new ObjectParameter("IdSubcategoria", typeof(int));
    
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SubcategoriaUpdate", idSubcategoriaParameter, idCategoriaParameter, nombreParameter);
        }
    
        public virtual int VentaAdd(Nullable<int> idCliente, Nullable<decimal> monto, ObjectParameter idVenta)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VentaAdd", idClienteParameter, montoParameter, idVenta);
        }
    
        public virtual int VentaDelete(Nullable<int> idVenta)
        {
            var idVentaParameter = idVenta.HasValue ?
                new ObjectParameter("IdVenta", idVenta) :
                new ObjectParameter("IdVenta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VentaDelete", idVentaParameter);
        }
    
        public virtual ObjectResult<VentaGetAll_Result> VentaGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VentaGetAll_Result>("VentaGetAll");
        }
    
        public virtual ObjectResult<VentaGetById_Result> VentaGetById(Nullable<int> idVenta)
        {
            var idVentaParameter = idVenta.HasValue ?
                new ObjectParameter("IdVenta", idVenta) :
                new ObjectParameter("IdVenta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VentaGetById_Result>("VentaGetById", idVentaParameter);
        }
    
        public virtual int VentaUpdate(Nullable<int> idVenta, Nullable<int> idCliente, Nullable<decimal> monto)
        {
            var idVentaParameter = idVenta.HasValue ?
                new ObjectParameter("IdVenta", idVenta) :
                new ObjectParameter("IdVenta", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VentaUpdate", idVentaParameter, idClienteParameter, montoParameter);
        }
    
        public virtual ObjectResult<ProductoGetAll_Result> ProductoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductoGetAll_Result>("ProductoGetAll");
        }
    
        public virtual ObjectResult<ProductoGetById_Result> ProductoGetById(Nullable<int> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductoGetById_Result>("ProductoGetById", idProductoParameter);
        }
    }
}
